/*
*
* Copyright (c) 2021 lowprokb.ca
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#include <behaviors/mouse_key_press.dtsi>
#include <behaviors/mouse_move.dtsi>
#include <behaviors/mouse_scroll.dtsi>

#define QWERTY 0
#define NUMANDMOVE 1
#define SYMBOL 2
#define FNMOUSE 3

&mmv {
   time-to-max-speed-ms = <2400>;
   acceleration-exponent=<0>;
};

&msc {
   time-to-max-speed-ms = <2400>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
                        bindings = <
   &kp TAB    &kp Q  &kp W  &kp E       &kp R           &kp T      &kp Y            &kp U                &kp I               &kp O    &kp P         &kp BKSP
   &kp LGUI   &kp A  &kp S  &kp D       &kp F           &kp G      &kp H            &kp J                &kp K               &kp L    &kp EXCL      &kp MINUS 
   &kp LSHFT  &kp Z  &kp X  &kp C       &kp V           &kp B      &kp N            &kp M                &kp CMMA            &kp DOT  &kp QUESTION  &kp ESC 
                            &mo SYMBOL  &mo NUMANDMOVE  &kp SPC    &mt LSHFT ENTER  &mt LCTRL LC(LS(J))  &mt RALT LC(COLON)
                        >;
                };

                numandmove_layer {
                        label = "NUMANDMOVE";
                        bindings = <
   &kp TAB    &kp N1   &kp N2  &kp N3       &kp N4   &kp N5       &kp N6           &kp N7               &kp N8              &kp N9     &kp N0     &kp BSPC
   &kp LGUI   &kp ESC  &none   &kp BSPC     &kp TAB  &none        &kp LEFT         &kp DOWN             &kp UP              &kp RIGHT  &kp ENTER  &kp RCTRL
   &kp LSHFT  &none    &none   &none        &none    &none        &kp HOME         &kp PAGE_DOWN        &kp PAGE_UP         &kp END    &none      &kp ESC
                               &mo FNMOUSE  &trans   &kp SPC      &mt LSHFT ENTER  &mt LCTRL LC(LS(J))  &mt RALT LC(COLON)
                         >;
                };

                symbol_layer {
                        label = "SYMBOL";
                        bindings = < 
   &kp TAB    &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)   &kp LS(PRCNT)    &kp LS(CARET)    &kp LS(AMPS)         &kp LS(STAR)        &kp LS(LPAR)  &kp LS(RPAR)  &kp BSPC
   &kp LGUI   &kp LS(TILDE)  &kp LS(PIPE)  &kp SEMI       &kp LS(COLON)  &kp LS(PLUS)     &kp GRAVE        &kp LS(DQT)          &kp SQT             &kp LBKT      &kp RBKT      &kp RALT
   &kp LSHFT  &trans         &kp BSLH      &kp LS(UNDER)  &kp MINUS      &kp EQUAL        &kp FSLH         &kp LS(LT)           &kp LS(GT)          &kp LS(LBRC)  &kp LS(RBRC)  &kp ESC
                                           &trans         &mo FNMOUSE    &kp SPC          &mt LSHFT ENTER  &mt LCTRL LC(LS(J))  &mt RALT LC(COLON)
                        >;
                };

                fnmouse_layer {
                        label = "FNMOUSE";
                        bindings = <
   &kp TAB    &kp F1                &kp F2                &kp F3             &kp F4           &kp F5        &kp F6           &kp F7          &kp F8              &kp F9           &kp F10  &kp F11 
   &kp LGUI   &none                 &none                 &none              &none            &none         &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_UP        &mmv MOVE_RIGHT  &none    &kp F12 
   &kp LSHFT  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE    &msc SCRL_LEFT   &msc SCRL_DOWN  &msc SCRL_UP        &msc SCRL_RIGHT  &none    &kp ESC
                                                          &trans             &trans           &kp SPC       &mkp LCLK        &mkp RCLK       &mt RALT LC(COLON)
                        >;
                };
        };
};